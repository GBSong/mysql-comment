<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:mvc="http://www.springframework.org/schema/mvc"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xsi:schemaLocation="
        http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
     	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd"
	    default-lazy-init="true">

	<context:component-scan base-package="cn.gaobs" />
	<context:annotation-config/>
	<!--<context:spring-configured/>-->
	<!--<context:load-time-weaver/>-->
	<!--<context:load-time-weaver weaver-class="org.jsmth.spring.SmthInstrumentationLoadTimeWeaver"/>-->


	<!--<mvc:annotation-driven />-->
	<!--<mvc:interceptors>-->
	<!--&lt;!&ndash; 国际化操作拦截器 如果采用基于（请求/Session/Cookie）则必需配置 &ndash;&gt;-->
	<!--<bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor" />-->
	<!--&lt;!&ndash;&lt;!&ndash; 如果不定义 mvc:mapping path 将拦截所有的URL请求 &ndash;&gt;&ndash;&gt;-->
	<!--&lt;!&ndash;<bean class="cn.com.open.openpaas.resourceservice.web.auth.AuthInterceptor"></bean>&ndash;&gt;-->
	<!--</mvc:interceptors>-->

	<!--所有的配置文件引入-->
	<bean id="propertyConfigurer"
		  class="org.jsmth.spring.AnnotationBeanPostProcessor">
		<property name="locations">
			<list>
				<value>classpath*:conf/*.properties</value>
			</list>
		</property>
	</bean>

	<bean id="appDataSource" class="org.jsmth.data.jdbc.SmthDataSource"
		  destroy-method="close">
		<constructor-arg index="0" value="${app.jdbc.dialect}"/>
		<constructor-arg index="1" value="${app.jdbc.url.driver}"/>
		<constructor-arg index="2" value="${app.jdbc.url.host}"/>
		<constructor-arg index="3" value="${app.jdbc.url.port}"/>
		<constructor-arg index="4" value="${app.jdbc.url.database}"/>
		<constructor-arg index="5" value="${app.jdbc.url.options}"/>
		<property name="username" value="${app.jdbc.username}"/>
		<property name="password" value="${app.jdbc.password}"/>
		<property name="validationQuery" value="select 1"/>
	</bean>

	<bean id="appTransactionManager"
		  class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="appDataSource"/>
	</bean>

	<tx:annotation-driven transaction-manager="appTransactionManager" />
	<!-- 定义事务传播属性 -->
	<!--<tx:advice id="txAdvice" transaction-manager="appTransactionManager">-->
		<!--<tx:attributes>-->
			<!--<tx:method name="query*" propagation="NOT_SUPPORTED" read-only="true"/>-->
			<!--<tx:method name="*" propagation="REQUIRED"/>-->
		<!--</tx:attributes>-->
	<!--</tx:advice>-->


	<bean id="appJdbcDao" class="org.jsmth.data.jdbc.JdbcDao">
		<constructor-arg index="0" ref="appDataSource"/>
		<constructor-arg index="1" value="${app.jdbc.dialect}"/>
	</bean>

	<alias name="appDataSource" alias="appSlaveDataSource"></alias>
	<alias name="appJdbcDao" alias="appSlaveJdbcDao"></alias>

	<!--<aop:aspectj-autoproxy proxy-target-class="true"/>-->

</beans>