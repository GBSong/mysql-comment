log4j.rootLogger=DEBUG,CONSOLE,DAOLOG
#log4j.appender.stdout=org.apache.log4j.ConsoleAppender
#log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
#log4j.appender.stdout.layout.ConversionPattern=%-d{HH:mm:ss,SSS} [%c]-[%p] %m%n


log4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender
log4j.appender.CONSOLE.Threshold=FATAL
log4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayout
log4j.appender.CONSOLE.layout.ConversionPattern=%-d{HH:mm:ss,SSS} [%c]-[%p] %m%n

#########################
#most important service
#########################

log4j.logger.org.jsmth=debug
log4j.logger.cn.com.open=debug
log4j.logger.org.hibernate=error
log4j.logger.org.springframework=debug
log4j.logger.org.apache.zookeeper=error

#########################
#data log
#########################
log4j.logger.datalog=DEBUG,DAOLOG
log4j.additivity.datalog=false
log4j.appender.DAOLOG=org.apache.log4j.RollingFileAppender
log4j.appender.DAOLOG.File=${catalina.home}/logs/resource_data_log.log
log4j.appender.DAOLOG.Threshold=FATAL
log4j.appender.DAOLOG.MaxFileSize=128MB
log4j.appender.DAOLOG.MaxBackupIndex=3
log4j.appender.DAOLOG.layout=org.apache.log4j.PatternLayout
log4j.appender.DAOLOG.layout.ConversionPattern=%m%n

#########################
#error log
#########################
log4j.logger.errlog=DEBUG,ERRLOG
log4j.additivity.errlog=false
log4j.appender.ERRLOG=org.apache.log4j.RollingFileAppender
log4j.appender.ERRLOG.File=${catalina.home}/logs/resource_error_log.log
log4j.appender.ERRLOG.Threshold=DEBUG
log4j.appender.ERRLOG.MaxFileSize=128MB
log4j.appender.ERRLOG.MaxBackupIndex=3
log4j.appender.ERRLOG.layout=org.apache.log4j.SimpleLayout
log4j.appender.ERRLOG.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %-5p [%t] %c.%M(%L) - %m%n




#定义根日志级别和输出端(定义了两个输出端)
#log4j.rootLogger=ERROR,CONSOLE

#定义第一个输出端，输出到控制台
#log4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender
#log4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayout
#log4j.appender.CONSOLE.layout.ConversionPattern=%d [%t] %-5p %c(%L) - %m%n

#定时第二个输出端，输出到文件,该文件最大空间为1000KB，超过1000KB后自动备份，生成新文件
#log4j.appender.Orclight=org.apache.log4j.RollingFileAppender
#log4j.appender.Orclight.file=orclight.log
#log4j.appender.Orclight.layout=org.apache.log4j.PatternLayout
#log4j.appender.Orclight.layout.conversionPattern=%d [%t] %-5p %c(%L) - %m%n
#log4j.appender.Orclight.MaxFileSize=1000KB
#log4j.appender.Orclight.MaxBackupIndex=10

#定义具体某个包下的日志输出级别
#log4j.logger.com.orclight.rbac=INFO,Orclight,CONSOLE
#log4j.logger.com.orclight.rbac.services.impl.CacheServiceImpl=INFO,Orclight
##log4j.logger.org.springframework=ERROR,Orclight
#
#log4j.logger.org.springframework.jdbc.support=INFO
#log4j.logger.org.springframework.scheduling=INFO
#定义sql语句的输出级别
#log4j.logger.java.sql.Connection=DEBUG